# Powerlevel10k instant prompt (must be first)
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Source Prezto
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi
# Source common files
[ -f ~/.aliases ] && source ~/.aliases
[ -f ~/.zprofile ] && source ~/.zprofile  
# Source modular function files
if [ -d ~/.config/zsh/functions ]; then
  for func_file in ~/.config/zsh/functions/*.zsh; do
    [ -f "$func_file" ] && source "$func_file"
  done
fi

# Source environment variables (systemd format)
if [ -f ~/.env ]; then
    set -o allexport
    source ~/.env
    set +o allexport
fi

# Cargo/Rust
[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"

# Platform-specific configuration
if [[ "$OSTYPE" == "darwin"* ]]; then
  # Mac-specific
  [ -f /opt/homebrew/opt/nvm/nvm.sh ] && source /opt/homebrew/opt/nvm/nvm.sh
  
  # Conda on Mac
  if [ -f "$HOME/miniconda3/bin/conda" ]; then
    __conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
      eval "$__conda_setup"
    else
      [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ] && . "$HOME/miniconda3/etc/profile.d/conda.sh"
    fi
    unset __conda_setup
  fi
  
  # Mac-specific paths
  export PATH="$HOME/.codeium/windsurf/bin:$PATH"
  export PATH="$HOME/.opencode/bin:$PATH"
  export DOCKER_HOST="unix:///$HOME/Library/Containers/com.docker.docker/Data/docker.raw.sock"
  
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
  # Linux-specific
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
  [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
fi

# Universal paths
export PATH="$PATH:$HOME/go/bin"
export PATH="$HOME/.local/share/bob/nvim-bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="/opt/homebrew/opt/openjdk@17/bin:$PATH"
export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="$HOME/.claude/local:$PATH"

# D2 settings
export D2_DARK_THEME=200


# Powerlevel10k config
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Zoxide (must be after compinit)
command -v zoxide >/dev/null 2>&1 && eval "$(zoxide init zsh)"

# Linux-specific SSH settings to prevent glitching
if [[ "$OSTYPE" == "linux-gnu"* ]] && [[ -n $SSH_CONNECTION ]]; then
  # Disable auto-correction
  unsetopt CORRECT
  unsetopt CORRECT_ALL
  
  # Disable flow control (fixes Ctrl+S/Ctrl+Q issues) - only if we have a TTY
  if [ -t 0 ]; then
    stty -ixon 2>/dev/null
  fi
  
  # Ensure UTF-8 locale
  export LANG=en_US.UTF-8
  export LC_ALL=en_US.UTF-8
  
  # Auto-attach to tmux main session on SSH
  if [ -z "$TMUX" ] && [ -n "$SSH_CONNECTION" ]; then
      if command -v tmux >/dev/null 2>&1; then
         TERM=tmux-256color tmux -u new -A -s main
      fi
  fi
fi

# Aliases
alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
alias killghosttys='pkill -f ghostty'

# Initialize rbenv
eval "$(rbenv init - zsh)"

# bun completions
[ -s "/Users/thevetat/.bun/_bun" ] && source "/Users/thevetat/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"


# opencode
export PATH=/home/thevetat/.opencode/bin:$PATH

alias claude="$HOME/.claude/local/claude"
